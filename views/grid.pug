//- Handles dynamic part of drawing grid - updating scoreboard,
//- drawing played tiles and either player1's or player2's hand
//-
//-  let t = get
//-  t.setAttributeNS(null, 'class', 'scoreboard_title');
//-  t.textContent = CurrentGame.name;

html
  head
    title Heist
    link(rel="stylesheet" type="text/css" href="heist.css")
  body
    input(id="ws_port" type="hidden" value=port)
    input(id="is_practice" type="hidden" value=is_practice)
    input(id="current_game_id" type="hidden" value=game_id)
    input(id="user" type="hidden" value=user_id)
    
    - var cell_size = 35;
    
    // if the layout is horizontal the scoreboard is vertical and the
    // grid x is offset by the xy_offset. if the layout is vertical the
    // grid y is offset by the xy_offset
    // NOTE: THIS TEMPLATE SETS UP FOR A HORIZONTAL LAYOUT, ONLY! The 
    // vertical layout is handled at the board.js getWindowSize callbak.
    - var scorebd_xy_offset = cell_size*3;
    input(id="scorebd_xy_offset" type="hidden" value=scorebd_xy_offset)
    - var player_panel_wh = cell_size*5;
    input(id="player_panel_wh" type="hidden" value=player_panel_wh)

    - var grid_wh = cell_size*15;
    - var wt_w = scorebd_xy_offset+cell_size*15  + player_panel_wh;
    - var wt_h = grid_wh;

    - var full_play_area = `0 0 ${wt_w} ${wt_h}`;
    - var vert_scorebd = `0 0 ${scorebd_xy_offset} ${wt_h}`;

    svg(viewBox=full_play_area id='wt_board' xmlns="http:www.w3.org2000svg")
      // scoreboard for horizontal board
      rect(id="scoreboard_bg" x="0" y="0" width=scorebd_xy_offset height=wt_h fill="black")

      // so we can set the background color
      // rjv width and height are the same, only the x offset for scoreboard handled here
      rect(id="grid_background" x=scorebd_xy_offset y="0" width=grid_wh height=grid_wh fill="#333")
      
      // all the grid lines
      - var i = 0;
      while i < Game.NUM_ROWS_COLS + 1
        line(class='line_horizontal' x1=scorebd_xy_offset y1=i*cell_size x2=scorebd_xy_offset+wt_h y2=i*cell_size stroke="black")
        line(class='line_vertical' x1=scorebd_xy_offset+i*cell_size y1="0" x2=scorebd_xy_offset+i*cell_size y2=wt_h stroke="black")
        - i++;

      // safe and center squares 
      each s, idx in Game.SAFE_INDEXES
        rect(x=(s.row-1)*cell_size+scorebd_xy_offset y=(s.col-1)*cell_size width=cell_size height=cell_size fill="#555"
          stroke-width=1 stroke="black" class="safety_square")
        text(x=(s.row-1)*cell_size+scorebd_xy_offset+cell_size/2 y=(s.col-1)*cell_size+cell_size/2 width=cell_size/4 height=cell_size/4 stroke_width=1
          fill="#555" text-anchor="middle" alignment-baseline="central"
          class="safety_text")
          |SAFE
          
      // center/start 
      - var center = {row: Math.round(15/2), col: Math.round(15/2)};
      rect(x=(center.row-1)*cell_size+scorebd_xy_offset y=(center.col-1)*cell_size width=cell_size height=cell_size fill="#555"
        stroke-width=3 stroke=Game.CENTER_FILL class="center_square")
      
      // Words 
      each w, idx in game.words
        each t, tidx in w.tiles 
          svg(id="tile_"+t.id x=(t.column-1)*cell_size+scorebd_xy_offset y=(t.row-1)*cell_size width=cell_size height=cell_size class="word_tile_svg")
            if t.player == game.player_1
              if t.is_safe
                rect(x="0" y="0" width=cell_size height=cell_size fill=game.player_1.tile_color_safe 
                  stroke_width=1 stroke='#000' class="tile_rect")
              else
                rect(x="0" y="0" width=cell_size height=cell_size fill=game.player_1.tile_color_risky 
                  stroke_width=1 stroke='#000' class="tile_rect")
            else
              if t.is_safe
                rect(x="0" y="0" width=cell_size height=cell_size fill=game.player_2.tile_color_safe 
                  stroke_width=1 stroke='#000' class="tile_rect")
              else
                rect(x="0" y="0" width=cell_size height=cell_size fill=game.player_2.tile_color_risky 
                  stroke_width=1 stroke='#000' class="tile_rect")
              
            text(x=cell_size/2 y=cell_size/2 width=cell_size height=cell_size stroke_width=2 stroke="#000" 
              text-anchor="middle" alignment-baseline="central" class="tile_text"
              onclick="tile_clicked")
              |#{t.char}
            text(x=cell_size*.8 y=cell_size*.6 width=cell_size*.4 height=cell_size*.4 stroke_width="1" stroke="#000" 
              text-anchor="end" alignment-baseline="central" class='tile_points')
              |#{t.points}        
            
      rect(id="player_panel" x=scorebd_xy_offset+grid_wh y="0" width=player_panel_wh height=grid_wh fill="black")
      
    // this should be a comment
    script(src="./js/vanilla-picker.js")
    script(src="./js/plain-draggable.min.js")
    script(src="./js/board.js")
    
